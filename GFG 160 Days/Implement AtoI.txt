public class Solution {
    public int myAtoi(String s) {
        // Step 1: Skip leading whitespaces
        s = s.trim();
        
        // Step 2: Check for a sign
        int sign = 1, i = 0;
        if (s.length() > 0 && (s.charAt(0) == '-' || s.charAt(0) == '+')) {
            if (s.charAt(0) == '-') {
                sign = -1;
            }
            i++;
        }
        
        // Step 3: Read the integer
        long result = 0;
        while (i < s.length() && Character.isDigit(s.charAt(i))) {
            result = result * 10 + (s.charAt(i) - '0');
            if (result > Integer.MAX_VALUE) {
                break;
            }
            i++;
        }
        
        // Step 4: Apply the sign
        result *= sign;
        
        // Step 5: Handle overflow
        if (result > Integer.MAX_VALUE) {
            return Integer.MAX_VALUE;
        }
        if (result < Integer.MIN_VALUE) {
            return Integer.MIN_VALUE;
        }
        
        return (int) result;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.myAtoi("   -42"));  // Output: -42
        System.out.println(solution.myAtoi("4193 with words"));  // Output: 4193
        System.out.println(solution.myAtoi("words and 987"));  // Output: 0
        System.out.println(solution.myAtoi("-91283472332"));  // Output: -2147483648
    }
}
